<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.appInfoSystem.dao.AppMapper">

    <select id="getAppById" resultType="appInfo" parameterType="int">
        select *  from app_info where id = #{id}
    </select>

    <select id="getFlatformName" resultType="String" parameterType="appInfo">
        select valueName from data_dictionary d, app_info a where d.valueId = #{flatformId} and d.typeCode = 'APP_FLATFORM' and a.id = #{id}
    </select>
    <select id="getFlatformNameById" parameterType="int" resultType="String">
        select valueName from data_dictionary d where d.valueId = #{flatformId} and d.typeCode = 'APP_FLATFORM'
    </select>

    <select id="selectPlatformDict" resultType="dataDictionary">
        select valueName, valueId from data_dictionary where typeCode = 'APP_FLATFORM'
    </select>
    <select id="selectCategoryLevel1" resultType="appCategory">
        select id, categoryName from app_category where parentId is null
    </select>
    <select id="selectNextLevelCategory" resultType="appCategory" parameterType="int">
        select id, categoryName from app_category where parentId = #{parentId}
    </select>

    <select id="paramSearchApp" resultType="appInfo" parameterType="Map">
        select * from app_info
        <where>
            <if test="softwareName != null and softwareName != ''">
                and softwareName like concat('%',#{softwareName},'%')
            </if>
            <if test="flatformId != 0 and flatformId != null">
                and flatformId = #{flatformId}
            </if>
            <if test="categoryLevel1 != null and categoryLevel1 != 0">
                and categoryLevel1 = #{categoryLevel1}
            </if>
            <if test="categoryLevel2 != null and categoryLevel2 != 0">
                and categoryLevel2 = #{categoryLevel2}
            </if>
            <if test="categoryLevel3 != null and categoryLevel3 != 0">
                and categoryLevel3 = #{categoryLevel3}
            </if>
        </where>
         <if test="start != null and size != null">
            limit #{start}, #{size}
         </if>
    </select>

    <select id="getCategoryName" parameterType="int" resultType="String">
        select categoryName from app_category where id = #{id}
    </select>
    <select id="getStatusName" parameterType="int" resultType="String">
        select valueName from data_dictionary dd, app_info ai
        where ai.status = dd.valueId and dd.typeCode = 'APP_STATUS'
          and ai.id = #{id}
    </select>

    <select id="simpleGetVersion" parameterType="int" resultType="appVersion">
        select * from app_version where id = #{id}
    </select>

    <select id="getVersionNo" parameterType="int" resultType="String">
        select versionNo from app_version av, app_info ai
        where ai.versionId = av.id and ai.id = #{id}
    </select>
    
    <insert id="addApp" parameterType="appInfo">
        insert into app_info (softwareName, APKName, supportROM, interfaceLanguage, softwareSize, downloads, flatformId,
                              categoryLevel1, categoryLevel2, categoryLevel3, appInfo, logoLocPath, logoPicPath)
        values (#{softwareName}, #{APKName}, #{supportROM}, #{interfaceLanguage}, #{softwareSize}, #{downloads}, #{flatformId},
                #{categoryLevel1}, #{categoryLevel2}, #{categoryLevel3}, #{appInfo}, #{logoLocPath}, #{logoPicPath})
    </insert>

    <update id="changeApp" parameterType="appInfo">
        update app_info set softwareName = #{softwareName}, APKName = #{APKName}, supportROM = #{supportROM}, 
                            interfaceLanguage = #{interfaceLanguage}, softwareSize = #{softwareSize}, downloads = #{downloads}, 
                            flatformId = #{flatformId}, categoryLevel1 = #{categoryLevel1}, categoryLevel2 = #{categoryLevel2}, 
                            categoryLevel3 = #{categoryLevel3}, appInfo = #{appInfo}, logoLocPath = #{logoLocPath}, 
                            logoPicPath = #{logoPicPath}
    </update>

    <insert id="addAppVersion">
        insert into app_version (appId, versionNo, versionInfo, downloadLink, versionSize, apkLocPath, apkFileName)
        values (#{appId}, #{versionNo}, #{versionInfo}, #{downloadLink}, #{versionSize}, #{apkLocPath}, #{apkFileName})
    </insert>
    <select id="getLatestVersion" parameterType="int" resultType="int">
        select id from app_version where appId = #{appId} order by creationDate desc limit 0,1
    </select>
    <update id="updateAppVersionId">
        update app_info set versionId = #{versionId} where id = #{id}
    </update>

    <select id="getAppInfo" parameterType="int" resultType="appInfo">
        select * from app_info where id = #{id}
    </select>

    <delete id="deleteAppInfo" parameterType="int">
        delete from app_info where id = #{id}
    </delete>

    <update id="devChangeAppPublishStatus" parameterType="Map">
        update app_info ai
        <if test="versionId != null and versionId != 0">
                , app_version av
            </if>
            set ai.status = #{status}
        <if test="publishStatus != null and publishStatus != 0">
            , av.publishStatus = #{publishStatus}
        </if>
        where ai.id = #{id}
    </update>

    <update id="backendChangeAppStatus" parameterType="Map">
        update app_info set status = #{status} where id = #{id}
    </update>
    
</mapper>